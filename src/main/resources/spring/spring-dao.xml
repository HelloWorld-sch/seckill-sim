<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--  配置整合mybatis过程-->
    <!-- 1、配置数据库相关参数properties属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 2、数据库池连接-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--  配置连接池属性 -->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="user" value="${user}"></property>
        <property name="password" value="${password}"></property>

        <!--   配置c3p0连接池私有属性     -->
        <property name="maxPoolSize" value="30"></property>
        <property name="minPoolSize" value="10"></property>
        <!--   当连接关闭被时不自动提交     -->
        <property name="autoCommitOnClose" value="false"></property>
        <!--   获取连接超时的时间      -->
        <property name="checkoutTimeout" value="1000"></property>
        <!--   当获取失败的重试连接次数     -->
        <property name="acquireRetryAttempts" value="2"></property>
    </bean>

    <!--   约定大于配置     -->
    <!-- 3、配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--  注入数据库连接池      -->
        <property name="dataSource" ref="dataSource"></property>
        <!--   配置MyBatis全局配置文件：mybatis-config.xml       -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--   扫描entity包 使用别名 org.seckill.entity.Seckill->Seckill    -->
        <property name="typeAliasesPackage" value="org.seckill.entity"></property>
        <!--   扫描sql配置文件：mapper需要的xml文件      -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" ></property>
    </bean>

    <!-- 4、配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--  注入sqlSessionFactory 为了防止提前初始化 sqlSessionFactory    -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--  给出需要扫描Dao接口包       -->
        <property name="basePackage" value="org.seckill.dao" ></property>
    </bean>

    <!--注入redisDao-->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="47.101.167.186"></constructor-arg>
        <constructor-arg index="1" value="6379"></constructor-arg>
    </bean>

    <!--导入spring-service配置文件-->
    <!--<import resource="classpath:spring/spring-service.xml"/>-->
</beans>